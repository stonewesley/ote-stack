/*
Copyright 2019 Baidu, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster.proto

package cluster

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageHead struct {
	// MessageID is the uuid of a controller crd.
	MessageID            string   `protobuf:"bytes,1,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	ParentClusterName    string   `protobuf:"bytes,2,opt,name=ParentClusterName,proto3" json:"ParentClusterName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageHead) Reset()         { *m = MessageHead{} }
func (m *MessageHead) String() string { return proto.CompactTextString(m) }
func (*MessageHead) ProtoMessage()    {}
func (*MessageHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{0}
}

func (m *MessageHead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageHead.Unmarshal(m, b)
}
func (m *MessageHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageHead.Marshal(b, m, deterministic)
}
func (m *MessageHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageHead.Merge(m, src)
}
func (m *MessageHead) XXX_Size() int {
	return xxx_messageInfo_MessageHead.Size(m)
}
func (m *MessageHead) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageHead.DiscardUnknown(m)
}

var xxx_messageInfo_MessageHead proto.InternalMessageInfo

func (m *MessageHead) GetMessageID() string {
	if m != nil {
		return m.MessageID
	}
	return ""
}

func (m *MessageHead) GetParentClusterName() string {
	if m != nil {
		return m.ParentClusterName
	}
	return ""
}

// ShimRequest is a request to transmit to target server.
type ShimRequest struct {
	// ParentClusterName is the name of parent cluster.
	ParentClusterName string `protobuf:"bytes,1,opt,name=ParentClusterName,proto3" json:"ParentClusterName,omitempty"`
	// Destination is the target server name.
	Destination string `protobuf:"bytes,2,opt,name=Destination,proto3" json:"Destination,omitempty"`
	// Method is the method need to be performed by target server.
	Method string `protobuf:"bytes,3,opt,name=Method,proto3" json:"Method,omitempty"`
	// URL is the request URL.
	URL string `protobuf:"bytes,4,opt,name=URL,proto3" json:"URL,omitempty"`
	// Body is the request body.
	Body                 string       `protobuf:"bytes,5,opt,name=Body,proto3" json:"Body,omitempty"`
	Head                 *MessageHead `protobuf:"bytes,6,opt,name=Head,proto3" json:"Head,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ShimRequest) Reset()         { *m = ShimRequest{} }
func (m *ShimRequest) String() string { return proto.CompactTextString(m) }
func (*ShimRequest) ProtoMessage()    {}
func (*ShimRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{1}
}

func (m *ShimRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShimRequest.Unmarshal(m, b)
}
func (m *ShimRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShimRequest.Marshal(b, m, deterministic)
}
func (m *ShimRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShimRequest.Merge(m, src)
}
func (m *ShimRequest) XXX_Size() int {
	return xxx_messageInfo_ShimRequest.Size(m)
}
func (m *ShimRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShimRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShimRequest proto.InternalMessageInfo

func (m *ShimRequest) GetParentClusterName() string {
	if m != nil {
		return m.ParentClusterName
	}
	return ""
}

func (m *ShimRequest) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *ShimRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *ShimRequest) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *ShimRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *ShimRequest) GetHead() *MessageHead {
	if m != nil {
		return m.Head
	}
	return nil
}

// ShimResponse is a response containing result from target server.
type ShimResponse struct {
	// Timestamp is the timestamp of response.
	Timestamp int64 `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	// StatusCode is the status code of response.
	StatusCode int32 `protobuf:"varint,2,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	// Body is the response body.
	Body                 string       `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	Head                 *MessageHead `protobuf:"bytes,4,opt,name=Head,proto3" json:"Head,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ShimResponse) Reset()         { *m = ShimResponse{} }
func (m *ShimResponse) String() string { return proto.CompactTextString(m) }
func (*ShimResponse) ProtoMessage()    {}
func (*ShimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cfb3b8ec240c376, []int{2}
}

func (m *ShimResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShimResponse.Unmarshal(m, b)
}
func (m *ShimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShimResponse.Marshal(b, m, deterministic)
}
func (m *ShimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShimResponse.Merge(m, src)
}
func (m *ShimResponse) XXX_Size() int {
	return xxx_messageInfo_ShimResponse.Size(m)
}
func (m *ShimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShimResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShimResponse proto.InternalMessageInfo

func (m *ShimResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ShimResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *ShimResponse) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *ShimResponse) GetHead() *MessageHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func init() {
	proto.RegisterType((*MessageHead)(nil), "cluster.MessageHead")
	proto.RegisterType((*ShimRequest)(nil), "cluster.ShimRequest")
	proto.RegisterType((*ShimResponse)(nil), "cluster.ShimResponse")
}

func init() { proto.RegisterFile("cluster.proto", fileDescriptor_3cfb3b8ec240c376) }

var fileDescriptor_3cfb3b8ec240c376 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x59, 0x93, 0x46, 0x3a, 0x51, 0xd0, 0x41, 0x64, 0x0f, 0x22, 0x21, 0xa7, 0x1c, 0xa4,
	0x07, 0x7d, 0x03, 0xdb, 0x83, 0x82, 0x15, 0xd9, 0xea, 0xc1, 0xe3, 0x6a, 0x06, 0x1b, 0x30, 0xd9,
	0x98, 0x99, 0x1c, 0x7c, 0x05, 0xdf, 0xcb, 0xf7, 0x92, 0x6c, 0xa2, 0x0d, 0x58, 0xf1, 0x36, 0xf3,
	0xcd, 0x0c, 0xfb, 0xff, 0xff, 0xc2, 0xfe, 0xf3, 0x6b, 0xcb, 0x42, 0xcd, 0xac, 0x6e, 0x9c, 0x38,
	0xdc, 0x1d, 0xda, 0xf4, 0x11, 0xe2, 0x25, 0x31, 0xdb, 0x17, 0xba, 0x22, 0x9b, 0xe3, 0x09, 0x4c,
	0x87, 0xf6, 0x7a, 0xa1, 0x55, 0xa2, 0xb2, 0xa9, 0xd9, 0x00, 0x3c, 0x83, 0xc3, 0x3b, 0xdb, 0x50,
	0x25, 0xf3, 0xfe, 0xfa, 0xd6, 0x96, 0xa4, 0x77, 0xfc, 0xd6, 0xef, 0x41, 0xfa, 0xa9, 0x20, 0x5e,
	0xad, 0x8b, 0xd2, 0xd0, 0x5b, 0x4b, 0x2c, 0xdb, 0xaf, 0xd5, 0x1f, 0xd7, 0x98, 0x40, 0xbc, 0x20,
	0x96, 0xa2, 0xb2, 0x52, 0xb8, 0x6a, 0x78, 0x65, 0x8c, 0xf0, 0x18, 0xa2, 0x25, 0xc9, 0xda, 0xe5,
	0x3a, 0xf0, 0xc3, 0xa1, 0xc3, 0x03, 0x08, 0x1e, 0xcc, 0x8d, 0x0e, 0x3d, 0xec, 0x4a, 0x44, 0x08,
	0x2f, 0x5d, 0xfe, 0xae, 0x27, 0x1e, 0xf9, 0x1a, 0x33, 0x08, 0x3b, 0xc7, 0x3a, 0x4a, 0x54, 0x16,
	0x9f, 0x1f, 0xcd, 0xbe, 0xf3, 0x19, 0xa5, 0x61, 0xfc, 0x46, 0xfa, 0xa1, 0x60, 0xaf, 0xf7, 0xc1,
	0xb5, 0xab, 0x98, 0xba, 0x90, 0xee, 0x8b, 0x92, 0x58, 0x6c, 0x59, 0x7b, 0x03, 0x81, 0xd9, 0x00,
	0x3c, 0x05, 0x58, 0x89, 0x95, 0x96, 0xe7, 0x2e, 0xef, 0xd3, 0x99, 0x98, 0x11, 0xf9, 0x11, 0x13,
	0x6c, 0x11, 0x13, 0xfe, 0x27, 0xe6, 0x29, 0xf2, 0xff, 0x77, 0xf1, 0x15, 0x00, 0x00, 0xff, 0xff,
	0x9d, 0x14, 0x01, 0xeb, 0xd0, 0x01, 0x00, 0x00,
}
